services:
  monitoring-backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: monitoring-backend
    ports:
      - "8000:8000"
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs:rw
      # Mount configuration if needed
      - ./.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+psycopg2://appuser:apppassword@db:5432/monitoring
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: monitoring-db
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
      POSTGRES_DB: monitoring
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d monitoring"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - monitoring-network

volumes:
  db_data:
    driver: local

networks:
  monitoring-network:
    driver: bridge