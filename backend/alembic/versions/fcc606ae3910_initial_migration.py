"""Initial migration

Revision ID: fcc606ae3910
Revises: 
Create Date: 2025-09-20 14:53:22.434748

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fcc606ae3910'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('severity', sa.String(length=10), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('score', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.CheckConstraint("severity IN ('LOW', 'MEDIUM', 'HIGH')", name='check_severity_values'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_alerts_resolved', 'alerts', ['resolved'], unique=False)
    op.create_index('idx_alerts_severity', 'alerts', ['severity'], unique=False)
    op.create_index('idx_alerts_timestamp_desc', 'alerts', ['timestamp'], unique=False, postgresql_using='btree')
    op.create_index('idx_alerts_unresolved_timestamp', 'alerts', ['resolved', 'timestamp'], unique=False, postgresql_where='resolved = false')
    op.create_index(op.f('ix_alerts_timestamp'), 'alerts', ['timestamp'], unique=False)
    op.create_table('container_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('container', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_container_logs_container_timestamp', 'container_logs', ['container', 'timestamp'], unique=False)
    op.create_index('idx_container_logs_message_gin', 'container_logs', ['message'], unique=False, postgresql_using='gin', postgresql_ops={'message': 'gin_trgm_ops'})
    op.create_index('idx_container_logs_timestamp_desc', 'container_logs', ['timestamp'], unique=False, postgresql_using='btree')
    op.create_index(op.f('ix_container_logs_container'), 'container_logs', ['container'], unique=False)
    op.create_index(op.f('ix_container_logs_timestamp'), 'container_logs', ['timestamp'], unique=False)
    op.create_table('docker_events',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('container', sa.String(length=255), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_docker_events_container', 'docker_events', ['container'], unique=False)
    op.create_index('idx_docker_events_timestamp_desc', 'docker_events', ['timestamp'], unique=False, postgresql_using='btree')
    op.create_index(op.f('ix_docker_events_timestamp'), 'docker_events', ['timestamp'], unique=False)
    op.create_table('metrics',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('cpu_usage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('memory_usage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('disk_usage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('network_rx', sa.BigInteger(), nullable=True),
    sa.Column('network_tx', sa.BigInteger(), nullable=True),
    sa.Column('tcp_connections', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_metrics_timestamp_desc', 'metrics', ['timestamp'], unique=False, postgresql_using='btree')
    op.create_index(op.f('ix_metrics_timestamp'), 'metrics', ['timestamp'], unique=False)
    op.create_table('email_notifications',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('alert_id', sa.BigInteger(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('recipient', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.CheckConstraint("status IN ('success', 'failed')", name='check_status_values'),
    sa.ForeignKeyConstraint(['alert_id'], ['alerts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_notifications_alert_id', 'email_notifications', ['alert_id'], unique=False)
    op.create_index('idx_email_notifications_sent_at', 'email_notifications', ['sent_at'], unique=False)
    op.create_index('idx_email_notifications_status', 'email_notifications', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_email_notifications_status', table_name='email_notifications')
    op.drop_index('idx_email_notifications_sent_at', table_name='email_notifications')
    op.drop_index('idx_email_notifications_alert_id', table_name='email_notifications')
    op.drop_table('email_notifications')
    op.drop_index(op.f('ix_metrics_timestamp'), table_name='metrics')
    op.drop_index('idx_metrics_timestamp_desc', table_name='metrics', postgresql_using='btree')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_docker_events_timestamp'), table_name='docker_events')
    op.drop_index('idx_docker_events_timestamp_desc', table_name='docker_events', postgresql_using='btree')
    op.drop_index('idx_docker_events_container', table_name='docker_events')
    op.drop_table('docker_events')
    op.drop_index(op.f('ix_container_logs_timestamp'), table_name='container_logs')
    op.drop_index(op.f('ix_container_logs_container'), table_name='container_logs')
    op.drop_index('idx_container_logs_timestamp_desc', table_name='container_logs', postgresql_using='btree')
    op.drop_index('idx_container_logs_message_gin', table_name='container_logs', postgresql_using='gin', postgresql_ops={'message': 'gin_trgm_ops'})
    op.drop_index('idx_container_logs_container_timestamp', table_name='container_logs')
    op.drop_table('container_logs')
    op.drop_index(op.f('ix_alerts_timestamp'), table_name='alerts')
    op.drop_index('idx_alerts_unresolved_timestamp', table_name='alerts', postgresql_where='resolved = false')
    op.drop_index('idx_alerts_timestamp_desc', table_name='alerts', postgresql_using='btree')
    op.drop_index('idx_alerts_severity', table_name='alerts')
    op.drop_index('idx_alerts_resolved', table_name='alerts')
    op.drop_table('alerts')
    # ### end Alembic commands ###